<script type="module">
	import * as THREE from "/webgl/build/three.module.js";
	import {FBXLoader} from '/webgl/file/jsm/loaders/FBXLoader.js';
	import {GLTFLoader} from '/webgl/file/jsm/loaders/GLTFLoader.js';
	var camera,
		scene,
		renderer,
		light;
	var planet,
		foodtruck,
		angle;

	angle = 1;

	init();
	animate();

	function init() {

		camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 2000);
		camera.position.z = 250;
		scene = new THREE.Scene();
		scene.background = new THREE.Color(0xd3d3d3);

		light = new THREE.HemisphereLight(0xffffff, 0x444444);
		light
			.position
			.set(0, 150, 250);
		scene.add(light);

		light = new THREE.DirectionalLight(0xffffff);
		light
			.position
			.set(0, 1, 0);
		scene.add(light);

		var loader = new FBXLoader();
		loader.load('webgl/file/Objet/planet.fbx', function(object) {
			planet = object;
			planet.rotation.x = 0.3;
			planet.traverse(function(node) {
				if (node.isMesh) {
					node.castShadow = true;
					node.receiveShadow = true;
				}
			});
			scene.add(planet);
		});

		var loader = new GLTFLoader();
		loader.load('webgl/file/Objet/foodtruck/scene.gltf', function(gltf) {
			foodtruck = gltf.scene;
			foodtruck
				.scale
				.set(9, 9, 9);

			foodtruck.position.y = 40;
			foodtruck.position.z = 99;
			foodtruck.rotation.y = -1.5;
			foodtruck.rotation.z = -1.6;

			foodtruck.traverse(function(node) {
				if (node.isMesh) {
					node.castShadow = true;
					node.receiveShadow = true;
				}
			});

			scene.add(foodtruck);
		}, function(xhr) {
			console.log((xhr.loaded / xhr.total * 100) + '% loaded');
		}, function(error) {
			console.log('An error happened');
		});

		renderer = new THREE.WebGLRenderer({antialias: true});
		renderer.setPixelRatio(window.devicePixelRatio);
		renderer.setSize(window.innerWidth, window.innerHeight);
		document
			.getElementById('artifactCanvas')
			.appendChild(renderer.domElement);

		window.addEventListener('resize', onWindowResize, false);
	}

	function onWindowResize() {
		camera.aspect = window.innerWidth / window.innerHeight;
		camera.updateProjectionMatrix();
		renderer.setSize(window.innerWidth, window.innerHeight);
	}

	function animate() {
		requestAnimationFrame(animate);

		if (planet.rotation.y <= 6.28) {
			if (angle == 1) {
				foodtruck.rotation.z += 0.01;
			}
			if (angle == 0) {
				foodtruck.rotation.z -= 0.01;
			}
			planet.rotation.y += 0.01;
			if (planet.rotation.y >= 1.6 && planet.rotation.y <= 2.1) {
				foodtruck.position.z += 0.5;
			}
			if (planet.rotation.y >= 2.2 && planet.rotation.y <= 2.7) {
				foodtruck.position.z -= 0.5;
			}
			if (foodtruck.rotation.z <= -1.3) {
				angle = 1
			}
			if (foodtruck.rotation.z >= -0.9) {
				angle = 0
			}

		} else {
			planet.rotation.y = 0;
		}

		renderer.render(scene, camera);
	}
</script>